name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release


jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-18.04
    container: ros:melodic-ros-base

    steps:
      - uses: actions/checkout@v1
      
      - name: Install catkin & package dependencies
        run: |
          cd / && ./ros_entrypoint.sh
          apt-get update
          apt-get install -y python-pip
          apt-get install -y ros-melodic-catkin python-catkin-tools
          apt-get install -y ros-melodic-cv-bridge
          apt-get install -y ros-melodic-roslint
          pip install bluerobotics-ping
          
      - name: Setup catkin workspace
        run: |
          mkdir -p ~/catkin_ws/src
          cd ~/catkin_ws
          /bin/bash -c "source /opt/ros/melodic/setup.bash && catkin build"
      
      - name: Build package
        run: |
          cd ~/catkin_ws/src
          cp -r $GITHUB_WORKSPACE .
          /bin/bash -c "source ../devel/setup.bash && catkin build"
          
      - name: boost
        run: sudo apt-get update && sudo apt-get install -yq libboost-all-dev

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: sudo cmake $GITHUB_WORKSPACE/rr_core -DCMAKE_BUILD_TYPE=$BUILD_TYPE -Dtest=ON

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: sudo make install

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ./rr_core_test
